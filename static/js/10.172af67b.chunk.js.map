{"version":3,"sources":["../node_modules/ios-inner-height/dist/ios-inner-height.js","pages/Home/DisplacementSphere.js","pages/Home/sphereVertShader.js","pages/Home/sphereFragShader.js"],"names":["module","exports","r","e","n","t","o","i","f","u","a","Error","code","p","call","length","1","require","window","navigator","userAgent","match","innerHeight","axis","Math","abs","orientation","dims","w","h","ruler","document","createElement","style","position","height","width","top","documentElement","appendChild","offsetHeight","innerWidth","removeChild","createRuler","DisplacementSphere","props","theme","useTheme","rgbBackground","themeId","colorWhite","useRef","start","Date","now","canvasRef","mouse","renderer","camera","scene","lights","uniforms","material","geometry","sphere","tweenRef","sphereSpring","prefersReducedMotion","usePrefersReducedMotion","isInViewport","useInViewport","useEffect","current","Vector2","WebGLRenderer","canvas","powerPreference","setSize","setPixelRatio","outputEncoding","sRGBEncoding","PerspectiveCamera","z","Scene","MeshPhongMaterial","onBeforeCompile","shader","UniformsUtils","merge","UniformsLib","time","type","value","vertexShader","fragmentShader","SphereBufferGeometry","Mesh","modifier","random","add","cleanScene","cleanRenderer","dirLight","DirectionalLight","ambientLight","AmbientLight","x","y","background","rgbToThreeColor","forEach","light","removeLights","handleResize","canvasHeight","windowWidth","fullHeight","aspect","updateProjectionMatrix","render","media","mobile","tablet","addEventListener","removeEventListener","onMouseMove","event","rotation","clientX","clientY","toArray","values","set","spring","from","get","to","stiffness","damping","velocity","getVelocity","mass","restSpeed","stop","animation","animate","requestAnimationFrame","undefined","cancelAnimationFrame","Transition","appear","in","onEnter","reflow","timeout","status","aria-hidden","className","classNames","ref"],"mappings":"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","file":"static/js/10.172af67b.chunk.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.iosInnerHeight = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\n * @module ios-inner-height\n *\n * @description Get proper window.innerHeight from iOS devices,\n * excluding URL control and menu bar.\n *\n * @return {function} Callable function to retrieve the\n * cached `window.innerHeight` measurement, specific to the\n * device's current orientation.\n */\nmodule.exports = (function () {\n\t// Avoid errors when globals are undefined (CI, etc)\n\t// https://github.com/tylerjpeterson/ios-inner-height/pull/7\n\tif (typeof window === 'undefined' || typeof navigator === 'undefined') {\n\t\treturn function () {\n\t\t\treturn 0;\n\t\t};\n\t}\n\n\t// Non-iOS browsers return window.innerHeight per usual.\n\t// No caching here since browsers can be resized, and setting\n\t// up resize-triggered cache invalidation is not in scope.\n\t/* istanbul ignore if  */\n\tif (!navigator.userAgent.match(/iphone|ipod|ipad/i)) {\n\t\t/**\n\t\t * Avoids conditional logic in the implementation\n\t\t * @return {number} - window's innerHeight measurement in pixels\n\t\t */\n\t\treturn function () {\n\t\t\treturn window.innerHeight;\n\t\t};\n\t}\n\n\t// Store initial orientation\n\tvar axis = Math.abs(window.orientation);\n\t// And hoist cached dimensions\n\tvar dims = {w: 0, h: 0};\n\n\t/**\n\t * Creates an element with a height of 100vh since iOS accurately\n\t * reports vp height (but not window.innerHeight). Then destroy it.\n\t */\n\tvar createRuler = function () {\n\t\tvar ruler = document.createElement('div');\n\n\t\truler.style.position = 'fixed';\n\t\truler.style.height = '100vh';\n\t\truler.style.width = 0;\n\t\truler.style.top = 0;\n\n\t\tdocument.documentElement.appendChild(ruler);\n\n\t\t// Set cache conscientious of device orientation\n\t\tdims.w = axis === 90 ? ruler.offsetHeight : window.innerWidth;\n\t\tdims.h = axis === 90 ? window.innerWidth : ruler.offsetHeight;\n\n\t\t// Clean up after ourselves\n\t\tdocument.documentElement.removeChild(ruler);\n\t\truler = null;\n\t};\n\n\t// Measure once\n\tcreateRuler();\n\n\t/**\n\t * Returns window's cached innerHeight measurement\n\t * based on viewport height and device orientation\n\t * @return {number} - window's innerHeight measurement in pixels\n\t */\n\treturn function () {\n\t\tif (Math.abs(window.orientation) !== 90) {\n\t\t\treturn dims.h;\n\t\t}\n\n\t\treturn dims.w;\n\t};\n})();\n\n},{}]},{},[1])(1)\n});\n","import React, { useEffect, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport {\r\n  Vector2,\r\n  sRGBEncoding,\r\n  WebGLRenderer,\r\n  PerspectiveCamera,\r\n  Scene,\r\n  DirectionalLight,\r\n  AmbientLight,\r\n  UniformsUtils,\r\n  UniformsLib,\r\n  MeshPhongMaterial,\r\n  SphereBufferGeometry,\r\n  Mesh,\r\n} from 'three';\r\nimport { spring, value } from 'popmotion';\r\nimport innerHeight from 'ios-inner-height';\r\nimport vertShader from './sphereVertShader';\r\nimport fragShader from './sphereFragShader';\r\nimport { Transition } from 'react-transition-group';\r\nimport { useTheme } from 'components/ThemeProvider';\r\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\r\nimport { reflow } from 'utils/transition';\r\nimport { media, rgbToThreeColor } from 'utils/style';\r\nimport { cleanScene, removeLights, cleanRenderer } from 'utils/three';\r\nimport './DisplacementSphere.css';\r\n\r\nconst DisplacementSphere = props => {\r\n  const theme = useTheme();\r\n  const { rgbBackground, themeId, colorWhite } = theme;\r\n  const width = useRef(window.innerWidth);\r\n  const height = useRef(window.innerHeight);\r\n  const start = useRef(Date.now());\r\n  const canvasRef = useRef();\r\n  const mouse = useRef();\r\n  const renderer = useRef();\r\n  const camera = useRef();\r\n  const scene = useRef();\r\n  const lights = useRef();\r\n  const uniforms = useRef();\r\n  const material = useRef();\r\n  const geometry = useRef();\r\n  const sphere = useRef();\r\n  const tweenRef = useRef();\r\n  const sphereSpring = useRef();\r\n  const prefersReducedMotion = usePrefersReducedMotion();\r\n  const isInViewport = useInViewport(canvasRef);\r\n\r\n  useEffect(() => {\r\n    mouse.current = new Vector2(0.8, 0.5);\r\n    renderer.current = new WebGLRenderer({\r\n      canvas: canvasRef.current,\r\n      powerPreference: 'high-performance',\r\n    });\r\n    renderer.current.setSize(width.current, height.current);\r\n    renderer.current.setPixelRatio(1);\r\n    renderer.current.outputEncoding = sRGBEncoding;\r\n\r\n    camera.current = new PerspectiveCamera(55, width.current / height.current, 0.1, 200);\r\n    camera.current.position.z = 52;\r\n\r\n    scene.current = new Scene();\r\n\r\n    material.current = new MeshPhongMaterial();\r\n    material.current.onBeforeCompile = shader => {\r\n      uniforms.current = UniformsUtils.merge([\r\n        UniformsLib['ambient'],\r\n        UniformsLib['lights'],\r\n        shader.uniforms,\r\n        { time: { type: 'f', value: 0 } },\r\n      ]);\r\n\r\n      shader.uniforms = uniforms.current;\r\n      shader.vertexShader = vertShader;\r\n      shader.fragmentShader = fragShader;\r\n      shader.lights = true;\r\n    };\r\n\r\n    geometry.current = new SphereBufferGeometry(32, 128, 128);\r\n\r\n    sphere.current = new Mesh(geometry.current, material.current);\r\n    sphere.current.position.z = 0;\r\n    sphere.current.modifier = Math.random();\r\n    scene.current.add(sphere.current);\r\n\r\n    return () => {\r\n      cleanScene(scene.current);\r\n      cleanRenderer(renderer.current);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const dirLight = new DirectionalLight(colorWhite, 0.6);\r\n    const ambientLight = new AmbientLight(colorWhite, themeId === 'light' ? 0.8 : 0.1);\r\n\r\n    dirLight.position.z = 200;\r\n    dirLight.position.x = 100;\r\n    dirLight.position.y = 100;\r\n\r\n    lights.current = [dirLight, ambientLight];\r\n    scene.current.background = rgbToThreeColor(rgbBackground);\r\n    lights.current.forEach(light => scene.current.add(light));\r\n\r\n    return () => {\r\n      removeLights(lights.current);\r\n    };\r\n  }, [rgbBackground, colorWhite, themeId]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const canvasHeight = innerHeight();\r\n      const windowWidth = window.innerWidth;\r\n      const fullHeight = canvasHeight + canvasHeight * 0.3;\r\n      canvasRef.current.style.height = fullHeight;\r\n      renderer.current.setSize(windowWidth, fullHeight);\r\n      camera.current.aspect = windowWidth / fullHeight;\r\n      camera.current.updateProjectionMatrix();\r\n\r\n      // Render a single frame on resize when not animating\r\n      if (prefersReducedMotion) {\r\n        renderer.current.render(scene.current, camera.current);\r\n      }\r\n\r\n      if (windowWidth <= media.mobile) {\r\n        sphere.current.position.x = 14;\r\n        sphere.current.position.y = 10;\r\n      } else if (windowWidth <= media.tablet) {\r\n        sphere.current.position.x = 18;\r\n        sphere.current.position.y = 14;\r\n      } else {\r\n        sphere.current.position.x = 22;\r\n        sphere.current.position.y = 16;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [prefersReducedMotion]);\r\n\r\n  useEffect(() => {\r\n    const onMouseMove = event => {\r\n      const { rotation } = sphere.current;\r\n\r\n      const position = {\r\n        x: event.clientX / window.innerWidth,\r\n        y: event.clientY / window.innerHeight,\r\n      };\r\n\r\n      if (!sphereSpring.current) {\r\n        sphereSpring.current = value(rotation.toArray(), values =>\r\n          rotation.set(values[0], values[1], sphere.current.rotation.z)\r\n        );\r\n      }\r\n\r\n      tweenRef.current = spring({\r\n        from: sphereSpring.current.get(),\r\n        to: [position.y / 2, position.x / 2],\r\n        stiffness: 30,\r\n        damping: 20,\r\n        velocity: sphereSpring.current.getVelocity(),\r\n        mass: 2,\r\n        restSpeed: 0.0001,\r\n      }).start(sphereSpring.current);\r\n    };\r\n\r\n    if (!prefersReducedMotion && isInViewport) {\r\n      window.addEventListener('mousemove', onMouseMove);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', onMouseMove);\r\n\r\n      if (tweenRef.current) {\r\n        tweenRef.current.stop();\r\n      }\r\n    };\r\n  }, [isInViewport, prefersReducedMotion]);\r\n\r\n  useEffect(() => {\r\n    let animation;\r\n\r\n    const animate = () => {\r\n      animation = requestAnimationFrame(animate);\r\n\r\n      if (uniforms.current !== undefined) {\r\n        uniforms.current.time.value = 0.00005 * (Date.now() - start.current);\r\n      }\r\n\r\n      sphere.current.rotation.z += 0.001;\r\n      renderer.current.render(scene.current, camera.current);\r\n    };\r\n\r\n    if (!prefersReducedMotion && isInViewport) {\r\n      animate();\r\n    } else {\r\n      renderer.current.render(scene.current, camera.current);\r\n    }\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animation);\r\n    };\r\n  }, [isInViewport, prefersReducedMotion]);\r\n\r\n  return (\r\n    <Transition appear in onEnter={reflow} timeout={3000}>\r\n      {status => (\r\n        <canvas\r\n          aria-hidden\r\n          className={classNames('displacement-sphere', `displacement-sphere--${status}`)}\r\n          ref={canvasRef}\r\n          {...props}\r\n        />\r\n      )}\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default DisplacementSphere;\r\n","//\r\n// GLSL textureless classic 3D noise \"cnoise\",\r\n// with an RSL-style periodic variant \"pnoise\".\r\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\r\n// Version: 2011-10-11\r\n//\r\n// Many thanks to Ian McEwan of Ashima Arts for the\r\n// ideas for permutation and gradient selection.\r\n//\r\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\r\n// Distributed under the MIT license. See LICENSE file.\r\n// https://github.com/ashima/webgl-noise\r\n//\r\n\r\nexport default `\r\nvec3 mod289(vec3 x)\r\n{\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 mod289(vec4 x)\r\n{\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x)\r\n{\r\n  return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r)\r\n{\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nvec3 fade(vec3 t) {\r\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\r\n}\r\n\r\n// Classic Perlin noise\r\nfloat cnoise(vec3 P)\r\n{\r\n  vec3 Pi0 = floor(P); // Integer part for indexing\r\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\r\n  Pi0 = mod289(Pi0);\r\n  Pi1 = mod289(Pi1);\r\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\r\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\r\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\r\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\r\n  vec4 iz0 = Pi0.zzzz;\r\n  vec4 iz1 = Pi1.zzzz;\r\n\r\n  vec4 ixy = permute(permute(ix) + iy);\r\n  vec4 ixy0 = permute(ixy + iz0);\r\n  vec4 ixy1 = permute(ixy + iz1);\r\n\r\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\r\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\r\n  gx0 = fract(gx0);\r\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\r\n  vec4 sz0 = step(gz0, vec4(0.0));\r\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\r\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\r\n\r\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\r\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\r\n  gx1 = fract(gx1);\r\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\r\n  vec4 sz1 = step(gz1, vec4(0.0));\r\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\r\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\r\n\r\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\r\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\r\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\r\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\r\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\r\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\r\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\r\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\r\n\r\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\r\n  g000 *= norm0.x;\r\n  g010 *= norm0.y;\r\n  g100 *= norm0.z;\r\n  g110 *= norm0.w;\r\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\r\n  g001 *= norm1.x;\r\n  g011 *= norm1.y;\r\n  g101 *= norm1.z;\r\n  g111 *= norm1.w;\r\n\r\n  float n000 = dot(g000, Pf0);\r\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\r\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\r\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\r\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\r\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\r\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\r\n  float n111 = dot(g111, Pf1);\r\n\r\n  vec3 fade_xyz = fade(Pf0);\r\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\r\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\r\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\r\n  return 2.2 * n_xyz;\r\n}\r\n\r\n// Classic Perlin noise, periodic variant\r\nfloat pnoise(vec3 P, vec3 rep)\r\n{\r\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\r\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\r\n  Pi0 = mod289(Pi0);\r\n  Pi1 = mod289(Pi1);\r\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\r\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\r\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\r\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\r\n  vec4 iz0 = Pi0.zzzz;\r\n  vec4 iz1 = Pi1.zzzz;\r\n\r\n  vec4 ixy = permute(permute(ix) + iy);\r\n  vec4 ixy0 = permute(ixy + iz0);\r\n  vec4 ixy1 = permute(ixy + iz1);\r\n\r\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\r\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\r\n  gx0 = fract(gx0);\r\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\r\n  vec4 sz0 = step(gz0, vec4(0.0));\r\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\r\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\r\n\r\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\r\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\r\n  gx1 = fract(gx1);\r\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\r\n  vec4 sz1 = step(gz1, vec4(0.0));\r\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\r\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\r\n\r\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\r\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\r\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\r\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\r\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\r\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\r\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\r\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\r\n\r\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\r\n  g000 *= norm0.x;\r\n  g010 *= norm0.y;\r\n  g100 *= norm0.z;\r\n  g110 *= norm0.w;\r\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\r\n  g001 *= norm1.x;\r\n  g011 *= norm1.y;\r\n  g101 *= norm1.z;\r\n  g111 *= norm1.w;\r\n\r\n  float n000 = dot(g000, Pf0);\r\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\r\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\r\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\r\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\r\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\r\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\r\n  float n111 = dot(g111, Pf1);\r\n\r\n  vec3 fade_xyz = fade(Pf0);\r\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\r\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\r\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\r\n  return 2.2 * n_xyz;\r\n}\r\n\r\nfloat turbulence(vec3 p) {\r\n  float w = 100.0;\r\n  float t = -.5;\r\n  for (float f = 1.0 ; f <= 10.0 ; f++) {\r\n    float power = pow(2.0, f);\r\n    t += abs(pnoise(vec3(power * p), vec3(10.0, 10.0, 10.0)) / power);\r\n  }\r\n  return t;\r\n}\r\n\r\n// START\r\nuniform float time;\r\nvarying vec2 vUv;\r\nvarying vec3 vNormal;\r\nvarying float noise;\r\n\r\nvarying vec3 vViewPosition;\r\n\r\nvoid main() {\r\n  #include <beginnormal_vertex>\r\n  #include <defaultnormal_vertex>\r\n  #include <begin_vertex>\r\n  #include <project_vertex>\r\n  #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\r\n    vNormal = normalize(transformedNormal);\r\n  #endif\r\n\r\n  vViewPosition = - mvPosition.xyz;\r\n\r\n  vUv = uv;\r\n\r\n  noise = turbulence(0.01 * position + normal + time * 0.8);\r\n  vec3 displacement = vec3((position.x) * noise, position.y * noise, position.z * noise);\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4((position + normal) + displacement, 1.0);\r\n}\r\n`;\r\n","export default `\r\n#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\nuniform float time;\r\nvarying vec2 vUv;\r\nvarying vec3 newPosition;\r\nvarying float noise;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <gradientmap_pars_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <envmap_physical_pars_fragment>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n  #include <clipping_planes_fragment>\r\n\r\n  vec3 color = vec3(vUv * (0.2 - 2.0 * noise), 1.0);\r\n  vec3 finalColors = vec3(color.b * 1.5, color.r, color.r);\r\n  vec4 diffuseColor = vec4(cos(finalColors * noise * 3.0), 1.0);\r\n  ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\r\n  vec3 totalEmissiveRadiance = emissive;\r\n\r\n  #include <logdepthbuf_fragment>\r\n  #include <map_fragment>\r\n  #include <color_fragment>\r\n  #include <alphamap_fragment>\r\n  #include <alphatest_fragment>\r\n  #include <specularmap_fragment>\r\n  #include <normal_fragment_begin>\r\n  #include <normal_fragment_maps>\r\n  #include <emissivemap_fragment>\r\n  #include <lights_phong_fragment>\r\n  #include <lights_fragment_begin>\r\n  #include <lights_fragment_maps>\r\n  #include <lights_fragment_end>\r\n  #include <aomap_fragment>\r\n\r\n  vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n\r\n  #include <envmap_fragment>\r\n  #include <premultiplied_alpha_fragment>\r\n  #include <tonemapping_fragment>\r\n  #include <encodings_fragment>\r\n  #include <fog_fragment>\r\n\r\n  gl_FragColor = vec4(outgoingLight, diffuseColor.a);\r\n}\r\n`;\r\n"],"sourceRoot":""}